function [stInfo] = au_info(szFilename)
% TGM_auinfo Return metadata of an au-file.
%
%--------------------------------------------------------------------------
%
% [stInfo] = TGM_auinfo(szFilename)
%
%
% szFilename:   String which contains the name of the au-file. If a path is
%               specified, it can be absolute, relative, or partial.
%
% stInfo:       Struct which contains the relevant information about the
%               au-file.
%
%--------------------------------------------------------------------------
%
% Example:      stInfo = TGM_auinfo('temp/TomShort.au')
%
%--------------------------------------------------------------------------
% This projected is licensed under the terms of the MIT license.
%--------------------------------------------------------------------------
% See also: TGM_auread, TGM_auwrite.

% Author: Julian Kahnert (c) TGM @ Jade Hochschule applied licence see EOF
% Version History:
% Ver. 0.01 initial create                                   05-May-2015 JK
% Ver. 0.02 help update                                      06-May-2015 JK

%--------------------------------------------------------------------------


%% read header from file

FID             = fopen(szFilename,'r');
if FID == -1
    error('Can not read file. Is the path correct?')
end
szMagicNumber   = fread(FID,4,'*char',0,'b');
iDataOffset     = fread(FID,1,'uint32',0,'b');
fseek(FID,4,'cof');                             % 2 data size
iEncoding       = fread(FID,1,'uint32',0,'b');
iSampleRate     = fread(FID,1,'uint32',0,'b');
iChannels       = fread(FID,1,'uint32',0,'b');

szPath          = fopen(FID);
stFile          = dir(szPath);
iDataSize       = stFile.bytes - iDataOffset;
fclose(FID);


%% show warnings if the data is corrupt

if ~strcmp(szMagicNumber.','.snd')
    error('Header of the file corrupt. Is it a au-file?')
end


%% write info struct

% cell-array {iEncoding, szEncoding, iBitsPerSample, szCompression, bSupported, szDescription}
caEncoding = {...
     1, 'mu',       8, 'Compressed',   0,   '8-bit G.711 Âµ-law';...
     2, 'int8',     8, 'Uncompressed', 1,   '8-bit linear PCM';...
     3, 'int16',   16, 'Uncompressed', 1,   '16-bit linear PCM';...
     4, 'int24',   24, 'Uncompressed', 1,   '24-bit linear PCM';...
     5, 'int32',   32, 'Uncompressed', 1,   '32-bit linear PCM';...
     6, 'single',  32, 'Uncompressed', 1,   '32-bit IEEE floating point';...
     7, 'double',  64, 'Uncompressed', 1,   '64-bit IEEE floating point';...
     8, '',        [], '',             0,   'Fragmented sample data';...
     9, '',        [], '',             0,   'DSP program';...
    10, '',         8, 'Uncompressed', 0,   '8-bit fixed point';...
    11, '',        16, 'Uncompressed', 0,   '16-bit fixed point';...
    12, '',        24, 'Uncompressed', 0,   '24-bit fixed point';...
    13, '',        32, 'Uncompressed', 0,   '32-bit fixed point';...
    18, '',        16, 'Compressed',   0,   '16-bit linear with emphasis';...
    19, '',        16, 'Compressed',   0,   '16-bit linear compressed';...
    20, '',        16, 'Compressed',   0,   '16-bit linear with emphasis and compression';...
    21, '',        [], '',             0,   'Music kit DSP commands';...
    23, '',         4, '',             0,   '4-bit ITU-T G.721 ADPCM';...
    24, '',        [], '',             0,   'ITU-T G.722 SB-ADPCM';...
    25, '',         3, '',             0,   'ITU-T G.723 3-bit ADPCM';...
    26, '',         5, '',             0,   'ITU-T G.723 5-bit ADPCM';...
    27, '',         8, '',             0,   '8-bit G.711 A-law';...
    };

idx             = find([caEncoding{:,1}]==iEncoding);
iBitsPerSample  = caEncoding{idx,3};
stInfo          = struct(...
    'Filename',             szPath,...
    'CompressionMethod',    caEncoding{idx,4},...
    'NumChannels',          iChannels,...
    'SampleRate',           iSampleRate,...
    'TotalSamples',         iDataSize*8 / iBitsPerSample / iChannels,...
    'Duration',             iDataSize*8 / iBitsPerSample / iSampleRate / iChannels,...
    'Title',                [],...
    'Comment',              [],...
    'Artist',               [],...
    'BitsPerSample',        iBitsPerSample,...
    'DataOffset',           iDataOffset,...
    'Encoding',             iEncoding,...
    'EncodingDescription',  caEncoding{idx,end});

